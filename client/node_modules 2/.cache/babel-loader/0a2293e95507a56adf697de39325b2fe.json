{"ast":null,"code":"var _jsxFileName = \"/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/src/components/Article.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport posts from \"../data\";\nexport default function Article() {\n  //   const { id } = useParams();\n  const [post, setPost] = useState({\n    id: \"\",\n    title: \"test\",\n    author: \"\",\n    date: \"\",\n    category: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    setPost(posts.find(e => e.id === id));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, post.author), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, post.date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, post.category), /*#__PURE__*/React.createElement(\"img\", {\n    src: post.imageUrl,\n    alt: post.imageAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, post.content)));\n}","map":{"version":3,"sources":["/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/src/components/Article.jsx"],"names":["React","useState","useEffect","useParams","posts","Article","post","setPost","id","title","author","date","category","imageUrl","imageAlt","content","find","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,EAAE,EAAE,EAD2B;AAE/BC,IAAAA,KAAK,EAAE,MAFwB;AAG/BC,IAAAA,MAAM,EAAE,EAHuB;AAI/BC,IAAAA,IAAI,EAAE,EAJyB;AAK/BC,IAAAA,QAAQ,EAAE,EALqB;AAM/BC,IAAAA,QAAQ,EAAE,EANqB;AAO/BC,IAAAA,QAAQ,EAAE,EAPqB;AAQ/BC,IAAAA,OAAO,EAAE;AARsB,GAAD,CAAhC;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACH,KAAK,CAACY,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACT,EAAF,KAASA,EAA3B,CAAD,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,KAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,MAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACK,IAAT,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACM,QAAT,CAJF,eAKE;AAAK,IAAA,GAAG,EAAEN,IAAI,CAACO,QAAf;AAAyB,IAAA,GAAG,EAAEP,IAAI,CAACQ,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,IAAI,CAACS,OAAT,CANF,CADF,CADF;AAYD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport posts from \"../data\";\n\nexport default function Article() {\n  //   const { id } = useParams();\n  const [post, setPost] = useState({\n    id: \"\",\n    title: \"test\",\n    author: \"\",\n    date: \"\",\n    category: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    content: \"\",\n  });\n  useEffect(() => {\n    setPost(posts.find((e) => e.id === id));\n  }, []);\n\n  return (\n    <>\n      <article>\n        <h1>{post.title}</h1>\n        <p>{post.author}</p>\n        <p>{post.date}</p>\n        <p>{post.category}</p>\n        <img src={post.imageUrl} alt={post.imageAlt} />\n        <p>{post.content}</p>\n      </article>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}