{"ast":null,"code":"var _jsxFileName = \"/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/client/src/components/Search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nexport default function Search() {\n  const [queryType, setQueryType] = useState(\"\");\n  const [query, setQuery] = useState();\n  const [posts, setPosts] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const excludedKeys = [\"id\", \"imageUrl\", \"imageAlt\"]; // const noResults = () => {\n  // setFiltered([]);\n\n  const resultsList = document.querySelector(\".search ul\"); // };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/blog\").then(({\n      data\n    }) => {\n      if (query) {\n        document.querySelector(\".search ul\").style.border = \"2px solid black\";\n        setFiltered(data.filter(e => {\n          for (var key in e) {\n            if (excludedKeys.indexOf(key) == -1) {\n              if (e[key].toString().toLowerCase().includes(query)) {\n                return e;\n              }\n            }\n          }\n        }));\n      } else {\n        setFiltered([]);\n      }\n    }).catch(err => console.log(err));\n    console.log(filtered);\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"search\",\n    type: \"text\",\n    placeholder: \"Search...\",\n    onChange: evt => setQuery(evt.target.value.toLowerCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, filtered.map(e => /*#__PURE__*/React.createElement(Link, {\n    to: `/article/${e.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: e.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, e.title), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, e.author), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, e.snippet.split(\" \").splice(0, 20).join(\" \"), \"...\"))))));\n}","map":{"version":3,"sources":["/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/client/src/components/Search.jsx"],"names":["React","useState","useEffect","Link","axios","Search","queryType","setQueryType","query","setQuery","posts","setPosts","filtered","setFiltered","excludedKeys","resultsList","document","querySelector","get","then","data","style","border","filter","e","key","indexOf","toString","toLowerCase","includes","catch","err","console","log","evt","target","value","map","id","title","author","snippet","split","splice","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const [queryType, setQueryType] = useState(\"\");\n  const [query, setQuery] = useState();\n  const [posts, setPosts] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const excludedKeys = [\"id\", \"imageUrl\", \"imageAlt\"];\n  // const noResults = () => {\n  // setFiltered([]);\n  const resultsList = document.querySelector(\".search ul\");\n  // };\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/blog\")\n      .then(({ data }) => {\n        if (query) {\n          document.querySelector(\".search ul\").style.border = \"2px solid black\";\n          setFiltered(\n            data.filter((e) => {\n              for (var key in e) {\n                if (excludedKeys.indexOf(key) == -1) {\n                  if (e[key].toString().toLowerCase().includes(query)) {\n                    return e;\n                  }\n                }\n              }\n            })\n          );\n        } else {\n          setFiltered([]);\n        }\n      })\n      .catch((err) => console.log(err));\n    console.log(filtered);\n  }, [query]);\n\n  return (\n    <div className=\"search\">\n      <input\n        name=\"search\"\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={(evt) => setQuery(evt.target.value.toLowerCase())}\n      />\n      <ul>\n        {filtered.map((e) => (\n          <Link to={`/article/${e.id}`}>\n            <li key={e.id}>\n              <h4>{e.title}</h4>\n              <span>{e.author}</span>\n              <p>{e.snippet.split(\" \").splice(0, 20).join(\" \")}...</p>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}