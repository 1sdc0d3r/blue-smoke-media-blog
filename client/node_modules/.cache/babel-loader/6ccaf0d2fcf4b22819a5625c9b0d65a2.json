{"ast":null,"code":"var _jsxFileName = \"/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/client/src/components/Search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function Search() {\n  const [queryType, setQueryType] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const excludedKeys = [\"id\", \"imageUrl\", \"imageAlt\"];\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/blog\").then(res => setPosts(res.data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    setFiltered(posts.filter(e => {\n      for (var key in e) {\n        if (excludedKeys.indexOf(key) == -1) {\n          if (e[key].toString().toLowerCase().includes(query)) {\n            console.log(key, e);\n            return e;\n          }\n        }\n      }\n    }));\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Searching for \", query), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, filtered.map(e => e.title)), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"search\",\n    placeholder: \"Search...\",\n    onChange: evt => setQuery(evt.target.value.toLowerCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/braden/Documents/blue-smoke-media/blog-blue-smoke-media/client/src/components/Search.jsx"],"names":["React","useState","useEffect","axios","Search","queryType","setQueryType","query","setQuery","posts","setPosts","filtered","setFiltered","excludedKeys","get","then","res","data","catch","err","console","log","filter","e","key","indexOf","toString","toLowerCase","includes","map","title","evt","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,YAAY,GAAG,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAnB,CAArB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFW,GADH,CACO,gCADP,EAEGC,IAFH,CAESC,GAAD,IAASN,QAAQ,CAACM,GAAG,CAACC,IAAL,CAFzB,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CACTH,KAAK,CAACa,MAAN,CAAcC,CAAD,IAAO;AAClB,WAAK,IAAIC,GAAT,IAAgBD,CAAhB,EAAmB;AACjB,YAAIV,YAAY,CAACY,OAAb,CAAqBD,GAArB,KAA6B,CAAC,CAAlC,EAAqC;AACnC,cAAID,CAAC,CAACC,GAAD,CAAD,CAAOE,QAAP,GAAkBC,WAAlB,GAAgCC,QAAhC,CAAyCrB,KAAzC,CAAJ,EAAqD;AACnDa,YAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAAiBD,CAAjB;AACA,mBAAOA,CAAP;AACD;AACF;AACF;AACF,KATD,CADS,CAAX;AAYD,GAbQ,EAaN,CAAChB,KAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBA,KAAnB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,QAAQ,CAACkB,GAAT,CAAcN,CAAD,IAAOA,CAAC,CAACO,KAAtB,CAAL,CAFF,eAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,QAAQ,EAAGC,GAAD,IAASvB,QAAQ,CAACuB,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBN,WAAjB,EAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAWD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const [queryType, setQueryType] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const excludedKeys = [\"id\", \"imageUrl\", \"imageAlt\"];\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/blog\")\n      .then((res) => setPosts(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n  useEffect(() => {\n    setFiltered(\n      posts.filter((e) => {\n        for (var key in e) {\n          if (excludedKeys.indexOf(key) == -1) {\n            if (e[key].toString().toLowerCase().includes(query)) {\n              console.log(key, e);\n              return e;\n            }\n          }\n        }\n      })\n    );\n  }, [query]);\n\n  return (\n    <div className=\"search\">\n      <h2>Searching for {query}</h2>\n      <ul>{filtered.map((e) => e.title)}</ul>\n      <input\n        name=\"search\"\n        placeholder=\"Search...\"\n        onChange={(evt) => setQuery(evt.target.value.toLowerCase())}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}